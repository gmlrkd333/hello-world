// Generated by view binder compiler. Do not edit!
package com.example.test_project_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test_project_1.R;
import com.github.mikephil.charting.charts.PieChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InfoPageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final PieChart pichart1;

  @NonNull
  public final PieChart pichart2;

  @NonNull
  public final Spinner sp1;

  @NonNull
  public final Spinner sp2;

  @NonNull
  public final Spinner sp3;

  @NonNull
  public final Spinner sp4;

  @NonNull
  public final Spinner sp5;

  @NonNull
  public final Spinner sp6;

  @NonNull
  public final Spinner sp7;

  @NonNull
  public final Spinner sp8;

  private InfoPageBinding(@NonNull LinearLayout rootView, @NonNull PieChart pichart1,
      @NonNull PieChart pichart2, @NonNull Spinner sp1, @NonNull Spinner sp2, @NonNull Spinner sp3,
      @NonNull Spinner sp4, @NonNull Spinner sp5, @NonNull Spinner sp6, @NonNull Spinner sp7,
      @NonNull Spinner sp8) {
    this.rootView = rootView;
    this.pichart1 = pichart1;
    this.pichart2 = pichart2;
    this.sp1 = sp1;
    this.sp2 = sp2;
    this.sp3 = sp3;
    this.sp4 = sp4;
    this.sp5 = sp5;
    this.sp6 = sp6;
    this.sp7 = sp7;
    this.sp8 = sp8;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InfoPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InfoPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.info_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InfoPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pichart1;
      PieChart pichart1 = ViewBindings.findChildViewById(rootView, id);
      if (pichart1 == null) {
        break missingId;
      }

      id = R.id.pichart2;
      PieChart pichart2 = ViewBindings.findChildViewById(rootView, id);
      if (pichart2 == null) {
        break missingId;
      }

      id = R.id.sp1;
      Spinner sp1 = ViewBindings.findChildViewById(rootView, id);
      if (sp1 == null) {
        break missingId;
      }

      id = R.id.sp2;
      Spinner sp2 = ViewBindings.findChildViewById(rootView, id);
      if (sp2 == null) {
        break missingId;
      }

      id = R.id.sp3;
      Spinner sp3 = ViewBindings.findChildViewById(rootView, id);
      if (sp3 == null) {
        break missingId;
      }

      id = R.id.sp4;
      Spinner sp4 = ViewBindings.findChildViewById(rootView, id);
      if (sp4 == null) {
        break missingId;
      }

      id = R.id.sp5;
      Spinner sp5 = ViewBindings.findChildViewById(rootView, id);
      if (sp5 == null) {
        break missingId;
      }

      id = R.id.sp6;
      Spinner sp6 = ViewBindings.findChildViewById(rootView, id);
      if (sp6 == null) {
        break missingId;
      }

      id = R.id.sp7;
      Spinner sp7 = ViewBindings.findChildViewById(rootView, id);
      if (sp7 == null) {
        break missingId;
      }

      id = R.id.sp8;
      Spinner sp8 = ViewBindings.findChildViewById(rootView, id);
      if (sp8 == null) {
        break missingId;
      }

      return new InfoPageBinding((LinearLayout) rootView, pichart1, pichart2, sp1, sp2, sp3, sp4,
          sp5, sp6, sp7, sp8);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
